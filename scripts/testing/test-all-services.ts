// RUTA: scripts/testing/test-all-services.ts
/**
 * @file test-all-services.ts
 * @description Guardi√°n de Integridad Total. Orquesta la ejecuci√≥n de todos
 *              los scripts de diagn√≥stico y pruebas del ecosistema con una
 *              salida de √©lite para una m√°xima claridad.
 * @version 2.0.0
 * @author L.I.A. Legacy
 */
import { exec } from "child_process";
import chalk from "chalk";

const tests = [
  { name: "Supabase", command: "pnpm diag:supabase:all" },
  { name: "Cloudinary", command: "pnpm diag:cloudinary:all" },
  { name: "Shopify", command: "pnpm diag:shopify" },
  { name: "Stripe E2E Flow", command: "pnpm test:stripe" },
];

async function runTest(name: string, command: string): Promise<void> {
  console.log(chalk.cyan.bold(`\n\n===== INICIANDO PRUEBA: ${name} =====\n`));
  return new Promise((resolve, reject) => {
    // --- [INICIO DE REFACTORIZACI√ìN ARQUITECT√ìNICA] ---
    // Se utiliza el patr√≥n de callback idiom√°tico de `exec` para manejar la salida.
    const childProcess = exec(command, (error, stdout, stderr) => {
      if (error) {
        // El 'error' del callback ya incluye el c√≥digo de salida y otra informaci√≥n.
        reject(new Error(`La prueba '${name}' fall√≥.\n${stderr}`));
        return;
      }
      resolve();
    });

    // Redirigir la salida del proceso hijo a la consola del proceso principal en tiempo real.
    childProcess.stdout?.pipe(process.stdout);
    childProcess.stderr?.pipe(process.stderr);
    // --- [FIN DE REFACTORIZACI√ìN ARQUITECT√ìNICA] ---
  });
}

async function main() {
  console.log(
    chalk.yellow.bold(
      "üöÄ Iniciando Guardi√°n de Integridad Total del Ecosistema..."
    )
  );
  try {
    for (const test of tests) {
      await runTest(test.name, test.command);
      console.log(
        chalk.green.bold(
          `\n===== PRUEBA ${test.name} COMPLETADA CON √âXITO =====`
        )
      );
    }
    console.log(
      chalk.green.bold(
        "\n\n‚úÖ ¬°√âXITO TOTAL! Todas las pruebas de integraci√≥n de servicios pasaron."
      )
    );
  } catch (error) {
    console.error(
      chalk.red.bold(
        "\n\n‚ùå ¬°FALLO CR√çTICO! Una o m√°s pruebas de integraci√≥n fallaron."
      )
    );
    if (error instanceof Error) {
      console.error(chalk.white(error.message));
    }
    process.exit(1);
  }
}

main();
